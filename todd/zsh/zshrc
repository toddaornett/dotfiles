##########
# character encoding
##########
export LC_ALL=en_US.UTF-8  
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

##########
# install the missing package manager brew if missing
##########
if ! type brew >/dev/null
then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  echo 'path=("/opt/homebrew/bin" $path)' >> $HOME/.zprofile
  path=("/opt/homebrew/bin" $path)
fi

##########
# hammerspoon config
##########
defaults write org.hammerspoon.Hammerspoon MJConfigFile "~/.config/todd/hammerspoon/init.lua"

##########
# autocomplete and history
##########
autoload -Uz compinit
typeset -i updated_at=$(date +'%j' -r ~/.zcompdump 2>/dev/null || stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)
if [ $(date +'%j') != $updated_at ]; then
  compinit -i
else
  compinit -C -i
fi
zmodload -i zsh/complist
setopt auto_list # automatically list choices on ambiguous completion
setopt auto_menu # automatically use menu completion
setopt always_to_end # move cursor to end if word had one match
zstyle ':completion:*' menu select # select completions with arrow keys
zstyle ':completion:*' group-name '' # group results by category
zstyle ':completion:::::' completer _expand _complete _ignored _approximate # enable approximate matches for completion

export HISTFILE=$HOME/.zsh_history
export HISTSIZE=100000
export SAVEHIST=$HISTSIZE
setopt hist_ignore_all_dups # remove older duplicate entries from history
setopt hist_reduce_blanks # remove superfluous blanks from history items
setopt inc_append_history # save history entries as soon as they are entered
setopt share_history # share history between different instances of the shell

##########
# enhance cd and use zoxide
##########
setopt auto_cd
if ! type zoxide >/dev/null
then
  brew install zoxide
fi
eval "$(zoxide init zsh)"

##########
# node.js
##########
if ! type nvm >/dev/null
then
  echo "Install nvm, see https://github.com/nvm-sh/nvm"
  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | sh -
fi
autoload -U add-zsh-hook
load-nvmrc() {
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$(nvm version)" ]; then
      nvm use
    fi
  elif [ -n "$(PWD=$OLDPWD nvm_find_nvmrc)" ] && [ "$(nvm version)" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

##########
# preset folders
##########
unset cdirmap
declare -A cdirmap
devBase=~/Projects
cdirmap[P]="$devBase"
cdirmap[vim]="$HOME/.config/nvim"

# display the folder shortcut mappings
function ds {
	(for key value in ${(@kv)cdirmap}; do printf "%-10s %s\n" $key $value; done) | sort
}

# change to specified folder by key
# e.g. to change to the ~/Projects directory, type "d P"
function d {
	key="$1"
	if [ -n "$key" ] && 
	then
		e=${key:0:1}
		echo $e
		v="${cdirmap[${key}]}" 
		if [ -n "$v" ];
		then
			cd "$v"
		else
			cd "$dirBase"
		fi
	else
		cd "$dirBase"
	fi
	unset key
}

##########
# spaceship prompt
##########
if ! brew list spaceship &>/dev/null
then
  brew install spaceship
fi
source $(brew --prefix)/opt/spaceship/spaceship.zsh

##########
# misc
##########
alias G='grep -i'
alias Z='source ~/.zshrc'

###########
# Copy/Paste aliases
###########
alias p='pbcopy '
alias P='pbpaste '

##########
# change finder setting for showing of hidden files
##########
function hide {
  defaults write com.apple.Finder AppleShowAllFiles false
}

function show {
  defaults write com.apple.Finder AppleShowAllFiles true
}

###########
# simulate locate command, thereby using the same Spotlight search DB
###########
function locate {
  mdfind "kMDItemDisplayName == '$@'wc"; }

